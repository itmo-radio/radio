{"version":3,"sources":["util.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","serviceWorker.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","catch","error","console","log","Player","setIsPlaying","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","useState","activeVolume","setActiveVolume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","className","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faAngleLeft","pause","autoPlay","faPause","faPlay","faAngleRight","faVolumeDown","volume","step","Song","src","cover","alt","name","artist","LibrarySong","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","href","faYoutube","faInstagram","faHistory","chillHop","uuidv4","App","clear","useRef","chillhop","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5dad850e.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\n  if (isPlaying) {\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise\n        .then((audio) => {\n          audioRef.current.play();\n        })\n        .catch((error) => console.log(error));\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n  faVolumeDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { playAudio } from \"../util\";\n\nconst Player = ({\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  currentSong,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const [activeVolume, setActiveVolume] = useState(false);\n  //UseEffect Update List\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: true,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  //Event Handlers\n  function getTime(time) {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  }\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n\n\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    //Forward BAck\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  const changeVolume = (e) => {\n    let value = e.target.value;\n    audioRef.current.volume = value;\n    setSongInfo({ ...songInfo, volume: value });\n  };\n\n  \n  \n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            value={songInfo.currentTime}\n            type=\"range\"\n            max={songInfo.duration || 0}\n            min={0}\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          autoPlay\n          size=\"2x\"\n\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n        <FontAwesomeIcon\n          onClick={() => setActiveVolume(!activeVolume)}\n          icon={faVolumeDown}\n        />\n        {activeVolume && (\n          <input\n            onChange={changeVolume}\n            value={songInfo.volume}\n            max=\"1\"\n            min=\"0\"\n            step=\"0.01\"\n            type=\"range\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong, isPlaying }) => {\n  return (\n    <div className=\"song-container\">\n      <img\n        className={isPlaying ? \"rotateSong\" : \"\"}\n        src={currentSong.cover}\n        alt=\"\"\n      />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\nimport { playAudio } from \"../util\";\n\nconst LibrarySong = ({\n  name,\n  artist,\n  cover,\n  id,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n  active,\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    setCurrentSong({ ...selectedSong[0] });\n    //Set Active in library\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    //Play audio\n    playAudio(isPlaying, audioRef);\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${active ? \"selected\" : \"\"}`}\n    >\n      <img src={cover} alt=\"\" />\n      <div className=\"song-description\">\n        <h3>{name}</h3>\n        <h4>{artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\n\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            cover={song.cover}\n            name={song.name}\n            artist={song.artist}\n            active={song.active}\n            key={song.id}\n            id={song.id}\n            setCurrentSong={setCurrentSong}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//import Iframe from 'react-iframe'\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\n//import { FontAwesomeIcon } from \"@fortawesome/fontawesome-svg-icons\";\n\nimport { faYoutube,\n    faInstagram,\n    \n    \n    \n\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  const openLibraryHandler = () => {\n    setLibraryStatus(!libraryStatus);\n  };\n\n  return (\n    <nav>\n      \n      <h1>ITMO Radio</h1>\n      <div className=\"social-container\"><p>View us on</p>   \n       <a href=\"https://www.youtube.com/c/itmoradio/\"\n      className=\"youtube social\"\n      >\n        \n        <FontAwesomeIcon icon={faYoutube} size='2x' />\n        </a>\n        \n        \n        \n        <a href=\"https://www.instagram.com/itmo_radio/?utm_medium=copy_link\"\n      className=\"insta social\"\n      >\n        <FontAwesomeIcon icon={faInstagram} size='2x' />\n        </a>\n      </div>\n      <button\n\n\n        className={libraryStatus ? \"library-active\" : \"\"}\n        onClick={openLibraryHandler}\n      >\n        History\n\n        <FontAwesomeIcon icon={faHistory} size= '2x'></FontAwesomeIcon>\n      </button>\n    </nav>\n\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"School Memories #1\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"RJ Sobika\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/school%20memories%20%231.mpeg?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n\n    {\n      name: \"Asku Maro\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Asku-maro.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n\n    {\n      name: \"Eswaran\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Eswaran.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Kutty Pattas\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Kutty-pattas.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Maara\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Maara.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Melody-Songs\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Melody-songss.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Melody #1\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Melody1.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Melody #2\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Melody2.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Melody #3\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Melody3.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Rakita\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Rakita.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Romantic-song\",\n      cover:\n        \"https://github.com/itmo-org/itmo-songs/raw/main/circle-cropped.png\",\n      artist: \"\",\n      audio: \"https://github.com/itmo-org/itmo-songs/blob/main/Romantic-song.mp3?raw=true\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport chillhop from \"./data\";\n//Util\nimport { playAudio } from \"./util\";\n\n\n\n\nfunction App() {\n  console.clear();\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n      volume: e.target.volume,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    playAudio(isPlaying, audioRef);\n    return;\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        \n        \n\n      ></audio>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}